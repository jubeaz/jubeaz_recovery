#- name: Reboot
#  win_reboot:
#    reboot_timeout: 1200
#
- name: Ensure Administrator is part of Domain Admins
  win_domain_group_membership:
    name: "Domain Admins"
    members:
      - Administrator
    state: present


- name: Sync the contents of one directory to another - hack to get Requires -Module Ansible.ModuleUtils.Legacy loaded
  community.windows.win_robocopy:
    src: C:\windows\temp
    dest: C:\windows\temp

- name: "Create users"
  microsoft.ad.user:
    sam_account_name: "{{ item.key }}"
    upn:  "{{ item.key + '@' + domain_name  }}"
    name: "{{ item.key }}"
    firstname: "{{item.value.firstname}}"
    surname: "{{ item.value.surname | default(item.value.firstname) }}"
    password: "{{ item.value.password }}"
    password_never_expires: yes
    path: "{{item.value.path}}"
    description: "{{item.value.description | default('-')}}"
    city: "{{item.value.city | default('-')}}"
    groups: 
      add: "{{item.value.groups | default([])}}"
    spn: 
      set: "{{item.value.spns | default([])}}"
    delegates:
      set: "{{item.value.delegates | default([])}}"
    protect_from_deletion: "{{item.value.sensitive | default(false)}}"
    domain_username: "{{domain_name}}\\Administrator"
    domain_password: "{{domain_password}}"
  with_dict: "{{ ad_users | default({})}}"
  register: usercreate


- name: Create Unconstrained
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $User
      )
      try {
        Set-ADUser -Identity $User  -TrustedForDelegation $True
        $Ansible.Changed = $true
      } catch {
        $Ansible.Changed = $false
      }
    error_action: stop
    parameters:
      User: "{{item.key}}"
  vars:
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{domain_name}}\\Administrator"
    ansible_become_password: "{{domain_password}}"
  when: item.value.unconstrained is defined and item.value.unconstrained == true
  with_dict: "{{ ad_users | default({})}}"
  register: usercreate
  register:
    trust_result

- name: Create constrained
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $Id,
          [String[]]
          $SPN
      )
      try {
        $User = Get-ADUser -Identity $Id
        # Configure Kerberos to (Use any authentication protocol)
        Set-ADAccountControl  $User  -TrustedToAuthForDelegation $true
        $Property = "msDS-AllowedToDelegateTo"
        $User | Set-ADObject -Add @{$Property=$SPN}
        $Ansible.Changed = $true
      } catch {
        $Ansible.Changed = $false
      }
    error_action: stop
    parameters:
      Id: "{{item.key}}"
      SPN: "{{item.value.constrained}}"
  vars:
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{domain_name}}\\Administrator"
    ansible_become_password: "{{domain_password}}"
  when: item.value.constrained | default([]) | length > 0
  with_dict: "{{ ad_users | default({})}}"
  register: usercreate

