
# set private on NAT
#- name: #- name: "Firewall | Disable RDP"
#  win_dsc:
#    resource_name: xFirewall
#    Name: "Administrator access for RDP (TCP-In)"
#    Ensure: absent
#    Enabled: True
#    Profile: "{{profile}}"
#    Direction: "Inbound"
#    Localport: "3389"
#    Protocol: "TCP"
#    Description: "Opens the listener port for RDP"
#  with_items:
#    - Domain
#    - Public
#    - Private
#  loop_control:
#    loop_var: profile

- name: "Firewall | Allow WINRM"
  win_dsc:
    resource_name: xFirewall
    Name: "Administrator access for WINRM (TCP-In)"
    Ensure: present
    Enabled: True
    Profile: "{{profile}}"
    Direction: "Inbound"
    Localport: "5985"
    Protocol: "TCP"
    Description: "Opens the listener port for WINRM"
  with_items:
    - Domain
    - Public
    - Private
  loop_control:
    loop_var: profile

- name: "Firewall | Allow WINRM from ansible"
  win_dsc:
    resource_name: xFirewall
    Name: "ANSIBLE WINRM"
    Ensure: present
    Enabled: True
    Profile: "Domain"
    Direction: "Inbound"
    action: "Allow"
    Localport: "5985"
    RemoteAddress: "192.168.56.1"
    Protocol: "TCP"
    Description: "ANSIBLE WINRM"


- name: "Firewall | Set profiles"
  community.windows.win_firewall:
    state: "{{profile.value.status | default('enabled')}}"
    profiles: 
      - "{{profile.key}}"
    outbound_action: "{{profile.value.outbound}}"
    inbound_action: "{{profile.value.inbound}}"
  with_dict: "{{params.profiles}}"
  loop_control:
    loop_var: profile


- name: 
  debug: 
    var: params.interface

#- name: "Set network interface  profile"
#  win_shell: Set-NetConnectionProfile -InterfaceAlias "{{i}}" -NetworkCategory  {{v}}
##  win_shell: whoami
#  vars:
#    i: "{{interface.key}}"
#    v: "{{interface.value}}"
#  with_dict: "{{params.interface}}"
#  loop_control:
#    loop_var: interface
#  become: yes
#  become_method: runas
#  become_user: SYSTEM
#
#
#- name: chek interface profile
#  win_shell: |
#    $obj=Get-NetConnectionProfile -InterfaceAlias "{{i}}"
#    Write-Output "{{hostname}}" $obj
#  register: interface_profile
#  vars:
#    i: "{{interface.key}}"
#  with_dict: "{{params.interface}}"
#  loop_control:
#    loop_var: interface
#
#- name: Show new laps password
#  debug: 
#    var: interface_profile

#Set-NetConnectionProfile -InterfaceAlias Ethernet1 -NetworkCategory "Public", "DomainAuthenticated", "Private"
# Get-NetConnectionProfile -InterfaceAlias Ethernet       # nat_adapter 
# Get-NetConnectionProfile -InterfaceAlias "Ethernet 2"   # domain_adapter


#- name: Firewall rule to allow SMTP on TCP port 25
#  community.windows.win_firewall_rule:
#    name: SMTP
#    localport: 25
#    action: allow
#    direction: in
#    protocol: tcp
#    state: present
#    enabled: yes
#  with_dict

#- name: manage firewall profiles
#  community.windows.win_firewall_rule:
#    name: "{{profile.key}}"
#    enabled: "{{profile.value.enabled | default(true)}}"
#    profiles: "{{profile.value.profiles | default(['domain'])}}"
#    action: "{{profile.value.action | default('allow')}}"
#    direction: "{{profile.value.direction | default('in')}}"
#    localip: "{{profile.value.lip | default('any')}}"
#    localport: "{{profile.value.lport | default('any')}}"
#    remoteip: "{{profile.value.rip | default('any')}}"
#    remoteport: "{{profile.value.rport | default('any')}}"
#  with_dict: "{{params.rules}}"
#  loop_control:
#    loop_var: profile