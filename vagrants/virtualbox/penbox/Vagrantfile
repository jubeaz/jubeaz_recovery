
#"StefanScherer/windows_10"
#"StefanScherer/windows_11"
#"StefanScherer/windows_2019"
#"gusztavvargadr/windows-10"
#"gusztavvargadr/windows-11"
#"gusztavvargadr/windows-server-core"
#"gusztavvargadr/windows-server"
#"archlinux/archlinux"

# pour VBS 
# passer en virtio network card
  # download the latest stable of windows driver https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso
  # switch network card on virtualbox
  # remove E1G6032E.sys or offending drivers


Vagrant.configure("2") do |config|
  # Uncomment this depending on the provider you want to use
  ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'
  #ENV['VAGRANT_DEFAULT_PROVIDER'] = 'vmware_desktop'
  net_defs = { 
  	haas:     {name: "haas",     mask: "255.255.255.0", network: "172.17.0.0", gw: "172.17.0.254"},
  	weyland:  {name: "weyland",  mask: "255.255.255.0", network: "172.17.1.0", gw: "172.17.1.254"},
  	research: {name: "research", mask: "255.255.255.0", network: "172.17.2.0", gw: "172.17.2.254"},
    bridge: {name: "br0", mask: "255.255.255.0", network: "192.168.10.0", gw: "192.168.10.254"}
#    bridge: {name: "br1", mask: "255.255.255.0", network: "192.168.58.0", gw: "192.168.2.1"}
#    vboxnet: {name: "vboxnet0", mask: "255.255.255.0", network: "192.168.56.0"}
  }
  
  boxes = [
    { 
      # only internal
      bname: "pbox", 
      ip_p: "192.168.56.1", 
      #box: "archlinux/archlinux",
      #box: "file:////home/jubeaz/dev/packer/archlinux/boxes/jubeaz-bios-archlinux-2025.05.16-x86_64.box",
      #box: "file:////home/jubeaz/dev/packer/archlinux/boxes/jubeaz-efi-archlinux-2025.05.16-x86_64.box",
      box: "jubeaz-efi-archlinux-2025.05.18-x86_64",
      os: "arch", 
      ram: 4*1024,
      cpu: 4
    }
  ]

  # disable rdp forwarded port inherited from gusztavvargadr box
  config.vm.network :forwarded_port, guest: 3389, host: 33389, id: "tcp33389", auto_correct: true, disabled: false
  # host-only network
  #config.vm.network "private_network", type: "dhcp", virtualbox__intnet: "vboxnet0"
  # no autoupdate if vagrant-vbguest is installed
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end
  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600
  config.winrm.retry_limit = 30
  config.winrm.retry_delay = 10
  config.winrm.transport = "plaintext"
  config.winrm.basic_auth_only = true
  # Set the SSH login details
  config.ssh.username = "jubeaz"
  config.ssh.password = "jubeaz"
  config.ssh.insert_key = false  # prevent Vagrant from overriding the authorized_keys

  # Use a custom private key for SSH
  #config.ssh.private_key_path = "~/.ssh/custom_id_rsa"
  boxes.each do |box|
    config.vm.define box[:bname] do |target|
      #Â BOX
      target.vm.provider "virtualbox" do |v|
        v.memory = box[:ram]
        v.name = box[:bname]
        v.cpus = box[:cpu]
        v.customize ["modifyvm", :id, "--graphicscontroller", "vboxsvga"]
        v.customize ["modifyvm", :id, "--vram", "128"]
        v.customize ["modifyvm", :id, "--usb", "on"]
        v.customize ["modifyvm", :id, "--usbehci", "on"] # usb2
        v.customize ["modifyvm", :id, "--usbxhci", "on"] # usb3
        v.customize ['usbfilter', 'add', '0', '--target', :id, '--name', 'EDUP AX3000 (mt7921u)', '--active', 'yes', '--vendorid', '0x0e8d', '--productid', '0x7961']
        v.customize ['usbfilter', 'add', '1', '--target', :id, '--name', 'Alfa AWUS036ACHM (mt76x0u)', '--active', 'yes', '--vendorid', '0x0e8d', '--productid', '0x7610']
        v.customize ['usbfilter', 'add', '2', '--target', :id, '--name', 'RTL8153 Gigabit Ethernet Adapter', '--serialnumber', '001000001', '--active', 'yes', '--vendorid', '0x0bda', '--productid', '0x8153']
        # host only
        #target.vm.network "private_network", ip: "192.168.56.1",  name: "vboxnet0"
        #v.customize ["modifyvm", :id, "--nic2", "hostonly", "--hostonlyadapter2", "vboxnet0"]
      end
      # Download image
      target.vm.box_download_insecure = box[:box]
      target.vm.box = box[:box]
      if box.has_key?(:box_version)
        target.vm.box_version = box[:box_version]
      end

      # issues/49
      target.vm.synced_folder '.', '/vagrant', disabled: true
      target.vm.synced_folder 'shared/', '/shared', disabled: true
      
      target.vm.communicator = "ssh"

      #n_info_p = net_defs[:bridge]
      #target.vm.network :public_network, bridge: n_info_p[:name], ip: box[:ip_p]
      #config.vm.provision "file", source: "../../files/authorized_keys", destination: "/tmp/authorized_keys"
      #target.vm.provision :shell, :path => "../../scripts/arch_python.sh", privileged: true, args: ["France"]
      #target.vm.provision :shell, :path => "../../scripts/fix_ip.sh", privileged: true, args: ["routed", n_info_p[:gw]]
      #target.vm.provision :shell, :path => "../../scripts/wifi.sh", privileged: true
      #target.vm.provision :shell, :path => "../../scripts/create_jubeaz.sh", privileged: true
    end
  end
end


