#- name: Reboot before install (long timeout in case of update)
#  win_reboot:
#    reboot_timeout: 1200

- name: create a directory for installer download
  win_file: 
    path: c:\setup
    state: directory

- name: Download PSTools
  ansible.windows.win_get_url:
    url: "https://download.sysinternals.com/files/PSTools.zip"
    dest: 'c:\setup\PSTools.zip'
  when: ISGMSA 

- name: Unzip PSTools
  community.windows.win_unzip:
    src: c:\setup\PSTools.zip
    dest: c:\setup
  when: ISGMSA 

- name: create a directory for installer extraction
  win_file: 
    path: c:\setup\mssql
    state: directory

- name: create a directory for media extraction
  win_file: 
    path: c:\setup\mssql\media
    state: directory

- name: create the configuration file
  win_template: 
    src: files/sql_conf.ini.j2
    dest: c:\setup\mssql\sql_conf.ini

- name: check downloaded file exists
  win_stat:
    path: c:\setup\mssql\sql_installer.exe
  register: installer_file

- name: get the installer
  ansible.windows.win_get_url:
      url: "{{download_url}}"
      dest: 'c:\setup\mssql\sql_installer.exe'
  when: not installer_file.stat.exists

- name: Add service account to Log on as a service
  win_user_right:
    name: SeServiceLogonRight
    users:
      - '{{ SQLSVCACCOUNT }}'
    action: add
  when: SQLSVCACCOUNT != "NT AUTHORITY\\NETWORK SERVICE" and SQLSVCACCOUNT != "NT AUTHORITY\\SYSTEM"


# - name: Setup service account
# Set-ADUser -Identity "{{SQLSVCACCOUNT}}" -ServicePrincipalNames @{Add='MSSQLSvc/castelblack.north.sevenkingdoms.local'}
# Get-ADUser -Identity "{{SQLSVCACCOUNT}}" | Set-ADAccountControl -TrustedToAuthForDelegation $true
# Set-ADUser -Identity "{{SQLSVCACCOUNT}}" -Add @{'msDS-AllowedToDelegateTo'=@('CIFS/winterfell.north.sevenkingdoms.local','CIFS/winterfell')}

- name: check install already done
  win_stat:
    path: "C:\\Program Files\\Microsoft SQL Server\\MSSQL15.{{sql_instance_name}}"
  register: mssql_install_already_done

# Install the database with a domain admin user
- name: Install the database
  win_command: c:\setup\mssql\sql_installer.exe /configurationfile=c:\setup\mssql\sql_conf.ini /IACCEPTSQLSERVERLICENSETERMS /MEDIAPATH=c:\setup\mssql\media /QUIET /HIDEPROGRESSBAR
  args:
    chdir: c:\setup
  vars:
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{domain_name}}\\Administrator"
    ansible_become_password: "{{domain_password}}"
    ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  register: mssqlinstall
  until: "mssqlinstall is not failed"
  retries: 3
  delay: 120
  when: not mssql_install_already_done.stat.exists

- name: Add or update registry for ip port
  win_regedit:
    path: 'HKLM:\Software\Microsoft\Microsoft SQL Server\MSSQL15.{{ sql_instance_name }}\MSSQLServer\SuperSocketNetLib\Tcp\IPAll'
    name: TcpPort
    data: 1433
  register: win_reg


- name: Restart a service
  win_service:
    name: 'MSSQL${{ sql_instance_name }}'
    force_dependent_services: yes
    state: restarted
  when: win_reg.changed

#- name: Restart a service
#  win_service:
#    name: 'MSSQL${{ sql_instance_name }}'
#    force_dependent_services: yes
#    state: restarted
#  register: mssql_service
#
#- name: 'MSSQL${{ sql_instance_name }}'
#  debug: 
#    var: mssql_service

- include_tasks: sqlcmd_gmsa.yml 
  when: ISGMSA 
- include_tasks: sqlcmd.yml 
  when: ISGMSA == false 


- name: Restart service
  win_service:
    name: 'MSSQL${{ sql_instance_name }}'
    force_dependent_services: yes
    state: restarted
  register: mssql_status

- fail:
    msg: "mssql not started"
  when: mssql_status.state != "running"

#- name: Firewall | Allow MSSQL through Firewall
#  win_dsc:
#    resource_name: xFirewall
#    Name: "Access for MSSQL (TCP-In)"
#    Ensure: present
#    Enabled: True
#    Profile: "Domain"
#    Direction: "Inbound"
#    Localport: "1433"
#    Protocol: "TCP"
#    Description: "Opens the listener port for MSSQL"
#
#- name: Firewall | Allow MSSQL discover through Firewall
#  win_dsc:
#    resource_name: xFirewall
#    Name: "Access for MSSQL (UDP-In)"
#    Ensure: present
#    Enabled: True
#    Profile: "Domain"
#    Direction: "Inbound"
#    Localport: "1434"
#    Protocol: "UDP"
#    Description: "Opens the discover port for MSSQL"